frameworkVersion: ^3.15.2

service: micro-socket

# provider
provider:
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-1'}
  name: aws
  runtime: go1.x
  websocketsApiName: ${self:service.name}
  environment:
    TZ: Asia/Tokyo
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Scan"
      Resource:
        - "Fn::GetAtt: [ConnectionsTable, Arn]"
    - Effect: Allow
      Action:
        - "execute-api:ManageConnections"
      Resource:
        - "arn:aws:execute-api:*:*:**/@connections/*"

# package
package:
  exclude:
    - ./**
  include:
    - ./bin/**
functions:
  connectionHandler:
    handler: bin/handleRequest
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: $default

# resources used with this app  (*dynamoDB)
resources:
  Resources:
    ConnectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service.name}-connections
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        SSESpecification:
          SSEEnabled: True
